/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2021-07-02 15:15:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;

public final class custlogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 int min=100000,max=999999; 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write("\n");
      out.write(" <!DOCTYPE html>\n");
      out.write(" <html lang=\"en\">\n");
      out.write("    <head>\n");
      out.write("            <meta charset=\"UTF-8\" content=\"width=device-width,initial-scale=1.0\">\n");
      out.write("             <title>Yashshree Egg Suppliers</title>\n");
      out.write("             <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n");
      out.write("              <link href=\"border.css\" type=\"text/css\" rel=\"stylesheet\">\n");
      out.write("              <link href=\"menu.css\"  type=\"text/css\" rel=\"stylesheet\">\n");
      out.write("     <style>\n");
      out.write("       table{\n");
      out.write("           background: linear-gradient(rgba(0,0,0,0.6),rgba(0,0,0,0.6));\n");
      out.write("           border-radius: 15px;\n");
      out.write("         }\n");
      out.write("    </style>\n");
      out.write("    </head>\n");
      out.write("   <body bgcolor=\"#292929\">\n");
      out.write("   <div align=\"center\" style=\"background-image: linear-gradient(rgba(0,0,0,0.4),rgba(0,0,0,0.4)),url('Images/hen8.jpg'); background-position: center; background-size: cover; height: 150vh;\"> \n");
      out.write("   <form method=\"post\" action=\"custlogin.jsp\" id=\"login\"><br>\n");
      out.write("           <table  border=\"3\" bordercolor=\"#f6a00b\"   width=\"360\" height=\"550\" rules=\"none\">\n");
      out.write("                 <tr height=\"130\"> \n");
      out.write("                  <td  align=\"center\">\n");
      out.write("                 <img src=\"Images/icon11.png\"  width=\"100\" height=\"100\"></img>\n");
      out.write("                 <td><font face=\"arial\" color=\"#f6a00b\" size=\"6\" > Yashshree Egg &nbsp; &nbsp; &nbsp;Suppliers</font>\n");
      out.write("                 </tr>\n");
      out.write("                   <tr >\n");
      out.write("                  <td colspan=\"2\" align=\"center\"><font face=\"arial\" color=\"#eee6e2\" size=\"5\">Login Here<hr width=\"100\"></hr></font></tr>\n");
      out.write("                  <tr>\n");
      out.write("              <td colspan=\"2\" width=\"30%\" valign=\"bottom\"><font face=\"arial\" color=\"#eee6e2\" size=\"4\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Username</font>\n");
      out.write("               </tr>\n");
      out.write("              <tr><td colspan=\"2\" align=\"center\" valign=\"top\" height=\"40\" ><font class=\"form\"> <input type=\"text\" name=\"t1\" required value='");
 if(request.getParameter("t1")!=null) out.print(request.getParameter("t1"));
      out.write("'>\n");
      out.write("                 </tr>\n");
      out.write("             <tr>\n");
      out.write("             <td colspan=\"2\" width=\"30%\" valign=\"bottom\"><font face=\"arial\" color=\"#eee6e2\" size=\"4\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Password </font>\n");
      out.write("             </tr>\n");
      out.write("              <tr><td colspan=\"2\" align=\"center\" valign=\"top\" height=\"40\"  width=\"700\"><font class=\"form\"> <input type=\"password\" name=\"t2\">\n");
      out.write("                 </tr>\n");
      out.write("             <tr><td colspan=\"2\" width=\"30%\" valign=\"bottom\"><font face=\"arial\" color=\"#eee6e2\" size=\"4\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Captcha</font></tr>\n");
      out.write("                <tr>\n");
      out.write("                 <td colspan=\"2\"  height=\"40\" align=\"center\" valign=\"bottom\"><input type=\"text\"  name=\"cp1\" value=\"");
out.print((int)(Math.random()*(max-min+1)+min));
      out.write("\" readonly>\n");
      out.write("<!-- since we want 6 digit number. Which lies in the range 100000 and 999999 we could not use Random class.\n");
      out.write("    Means\n");
      out.write("      Random r=new Random();\n");
      out.write("      int k=r.nextInt(999999);\n");
      out.write("      This will return numbers from 0 to 999999\n");
      out.write("      So to get numbers in specific range use Math.random()*(max-min+1)+min\n");
      out.write("-->\n");
      out.write("                    <tr>\n");
      out.write("                  <tr><td colspan=\"2\" height=\"70\" align=\"center\" valign=\"bottom\">  <input type=\"text\" name=\"cp2\"  placeholder=\"Enter above captcha here\">\n");
      out.write("                </tr>\n");
      out.write("                 <tr>\n");
      out.write("            <td colspan=\"2\" height=\"70\" align=\"center\"><font class=\"form\"> <input type=\"submit\" value=\"Login\" >\n");
      out.write("                </tr>\n");
      out.write("               </table>                 \n");
      out.write("             <center><font face=\"arial\" size=\"4\" color=\"#eee6e2\" style=\"background: linear-gradient(rgba(0,0,0,0.6),rgba(0,0,0,0.6));\">Not Registered?\n");
      out.write("             <a href=\"register.html\"><font color=\"#f6a00b\">Register Now</font></a></font></center>\n");
      out.write("               </form> \n");
      out.write("                <div align='left'>\n");
      out.write("                <tr> \n");
      out.write("                 <a href=\"index.jsp\">\n");
      out.write("                 <font face=\"arial\" size=\"7\" color=\"#eee6e2\">\n");
      out.write("                <span class=\"fa fa-arrow-circle-left\" aria-hidden=\"true\">\n");
      out.write("                </span></font>\n");
      out.write("               </a>\n");
      out.write("           </div>\n");
      out.write(" ");

 String a=request.getParameter("t1");
 String b=request.getParameter("t2");
  if(a!=null&&b!=null)
 {
     if(!request.getParameter("cp1").equals(request.getParameter("cp2")))
     {
      out.print("<center><font face='arial' color='red' size='4'><b>Invalid Capcha</b></font></center>");
      //Runtime.getRuntime().exit(0); //System.exit(0) will kill/stop server. Dont use that
      }
      else
     {
      Class.forName("org.postgresql.Driver");
      Connection con=DriverManager.getConnection("jdbc:postgresql://localhost:5432/ty","postgres","qwertyuiop");
      if(con==null)    
      out.print("Unable to connect");
     else
      {
      Statement st=con.createStatement();
      ResultSet rs=st.executeQuery("select * from cust_login where username='"+a+"' and password=crypt('"+b+"',password)");
      if(rs.next())
      {
              HttpSession hs=request.getSession(true);           
              hs.setAttribute("user",a);
              response.sendRedirect("custpage.jsp");            
       }
       out.print("<center><font face='arial' color='red' size='4'><b>Invalid username or password</b></font></center>");
       st.close();
    }
      con.close();
  }
}

      out.write("\n");
      out.write("    </div>\n");
      out.write("   </body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
