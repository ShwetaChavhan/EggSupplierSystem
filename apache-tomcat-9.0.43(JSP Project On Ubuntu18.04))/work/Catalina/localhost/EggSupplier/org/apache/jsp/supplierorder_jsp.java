/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2021-06-15 14:45:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.Date;
import java.text.*;

public final class supplierorder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 HttpSession hs;
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("    <head>\n");
      out.write("            <meta charset=\"UTF-8\" content=\"width=device-width,initial-scale=1.0\">\n");
      out.write("             <title>Yashshree Egg Suppliers</title>\n");
      out.write("             <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n");
      out.write("              <link href=\"cust.css\" rel=\"stylesheet\">\n");
      out.write("              <link href=\"menu.css\" type=\"text/css\" rel=\"stylesheet\">\n");
      out.write("              <link href=\"border.css\" type=\"text/css\" rel=\"stylesheet\">\n");
      out.write("          <link rel=\"stylesheet\" type=\"text/css\" href=\"help.css\">\n");
      out.write("           <link  rel=\"stylesheet\" href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\">\n");
      out.write("    <style>\n");
      out.write("        th,td{\n");
      out.write("        padding: 10px;\n");
      out.write("        border-bottom: 2px solid #f6a00b;\n");
      out.write("       }\n");
      out.write("           caption{\n");
      out.write("               font-family: serif;\n");
      out.write("               color: #eee6e2;\n");
      out.write("               font-size: 20px;\n");
      out.write("           }\n");
      out.write("    </style>\n");
      out.write("    </head>\n");
      out.write("    <body bgcolor=\"#292929\">      \n");
      out.write("      <div class=\"menu-bar\" id=\"header\">\n");
      out.write("        <ul>\n");
      out.write("       <img src=\"Images/icon11.png\" width=\"55\" height=\"55\"></img>\n");
      out.write("       <color>Yashshree Egg Suppliers</color>\n");
      out.write("       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n");
      out.write("         <li class=\"active\"><a href=\"supplierpage.jsp\">Home</a></li>\n");
      out.write("       <li><a href=\"supplieregg.jsp\">Eggs </a></li>\n");
      out.write("       <li><a href=\"supplierorder.jsp\">Orders</a>\n");
      out.write("        </li>\n");
      out.write("       <li><a href=\"supplierpayment.jsp\">Payment</a></li>\n");
      out.write("        <li><a href=\"about.html\">About</a></li>      \n");
      out.write("        <li><a href=\"#\">\n");
      out.write("       <span class=\"fa fa-user-circle\" aria-hidden=\"true\"></span>\n");
      out.write("       ");
          
            hs=request.getSession(true);  //In java default timeout for session is 30 minutes
           //This value is specified in web.xml. We can change timout value in web.xml
           String S=(String)hs.getAttribute("supplier");
            if(S!=null)
            out.print(S); 
            else
            out.print("<script>alert('Your Session has been expired'); window.location.assign('supplierlogin.jsp');</script>");            
      
      out.write("\n");
      out.write("        </a>\n");
      out.write("           <div class=sub-menu-2>\n");
      out.write("              <ul>\n");
      out.write("                 <li><a href=\"supplieraccount.jsp\">Account</a></li>\n");
      out.write("                 <li><a href=\"supplierlogin.jsp\">Log Out</a></li>                    \n");
      out.write("               </ul>\n");
      out.write("           </div>\n");
      out.write("         </li>\n");
      out.write("       </ul> \n");
      out.write("   </div>\n");
      out.write("        <div id=\"header\" style=\"background-image: linear-gradient(rgba(0,0,0,0.8),rgba(0,0,0,0.7)),url(Images/hen24.jpg); background-position: center; background-size: cover; height: 120vh; \">\n");
      out.write("       <br><br><br>\n");
      out.write("       ");

      Class.forName("org.postgresql.Driver");
      Connection con=DriverManager.getConnection("jdbc:postgresql://localhost/ty","postgres","qwertyuiop");
       if(con==null)
       out.print("Unable to connect :(");
       else
       {
       hs=request.getSession(true);
       String name=(String)hs.getAttribute("supplier");
       Statement st=con.createStatement();
       ResultSet rs=st.executeQuery("select oid,odate,otype,ordered_qty,deldate,payment_status,status from orders where sid=(select sid from supplier_login where username='"+name+"')");
       out.print("<font face='arial' size='3' color='#eee6e2'>");
       out.print("<table  cellspacing='0' style='margin: 0 auto;' width='1030'>");
       out.print("<caption><b>Orders Assigned To You</b></caption>");
       out.print("<tr bgcolor='#f6a00b'><th class='border'>Order Id</th> <th>Order Date</th><th>Type</th><th>Quantity</th><th>Delivery Date</th><th>Payment Status</th><th>Status</th><th></th></tr>");
          while(rs.next())
          {
            out.print("<tr align='center'>");
            out.print("<td>"+rs.getInt(1));
 
           SimpleDateFormat  sdf=new SimpleDateFormat("yyyy-mm-dd");
           Date d2=sdf.parse(rs.getString(2));
           sdf=new SimpleDateFormat("dd/mm/yyyy");
           out.print("<td class='border'>"+sdf.format(d2));
 
            out.print("<td>"+rs.getString(3));
            out.print("<td>"+rs.getInt(4));

           sdf=new SimpleDateFormat("yyyy-mm-dd");
           d2=sdf.parse(rs.getString(5));
           sdf=new SimpleDateFormat("dd/mm/yyyy");
           out.print("<td class='border'>"+sdf.format(d2));

             out.print("<td>"+rs.getString(6));
            out.print("<td>"+rs.getString(7));
            if(rs.getString(7).equals("incomplete"))
            out.print("<td><form method='post' action='completeorder.jsp'><input type='radio' name='r1' value='"+rs.getInt(1)+"'>&nbsp;<input type='submit' value='Mark as Complete' >");
            else
            out.print("<td>");
            out.print("</tr>");
         }
       out.print("</table>");                
       }
  
      out.write("           \n");
      out.write("     </div>\n");
      out.write("   </body>\n");
      out.write("  </html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
