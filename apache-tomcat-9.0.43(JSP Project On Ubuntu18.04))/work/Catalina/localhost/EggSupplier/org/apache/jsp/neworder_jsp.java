/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2021-06-22 18:20:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.Date;
import java.text.*;

public final class neworder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write(" <!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("    <head>\n");
      out.write("            <meta charset=\"UTF-8\" content=\"width=device-width,initial-scale=1.0\">\n");
      out.write("             <title>Yashshree Egg Suppliers</title>\n");
      out.write("             <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n");
      out.write("              <link href=\"border.css\" rel=\"stylesheet\">\n");
      out.write("    </head>\n");
      out.write("    <body bgcolor=\"#392f2b\">\n");
      out.write("            <center>\n");
      out.write("            <font class=\"form\" size=\"4\">\n");
      out.write(" ");

     String type=request.getParameter("type");
     int qty=Integer.parseInt(request.getParameter("qty"));
     
     if(type!=null)
     {
             Class.forName("org.postgresql.Driver");
             Connection con=DriverManager.getConnection("jdbc:postgresql://localhost/ty","postgres","qwertyuiop");                                                                 
             Statement st=con.createStatement();
             ResultSet rs,rs1,rs2;
             rs=st.executeQuery("select * from egg1");
                  int k=0,cno=0,id=0; 
                  float rate=0;
                 while(rs.next())
                   {
                      if(type.equals(rs.getString(1)))
                      {
                         if(rs.getInt(3)<qty)                        
                           k=1;                          
                        rate=rs.getFloat(2); 
                           break;
                      }
                  }
                 HttpSession hs=request.getSession(true);
                 String user=(String)hs.getAttribute("user");
                 rs1=st.executeQuery("select cno from cust_login where username='"+user+"'");
                 if(rs1.next())            //rs1.next() kelyashivay rs1.getInt() or any other method call hot nahi.
                 cno=rs1.getInt(1);
                       
                 rs2=st.executeQuery("select max(oid) from orders");
                  if(rs2.next())
                  id=rs2.getInt(1);
                                
                Date d1=new Date();
                String a=(d1.getYear()+1900)+"-"+(d1.getMonth()+1)+"-"+d1.getDate();
                String b=d1.getHours()+":"+d1.getMinutes()+":"+d1.getSeconds(); 
                String del=null; 
                if(k==1)
               {
                del=(d1.getYear()+1900)+"-"+(d1.getMonth()+1)+"-"+(d1.getDate()+2);
                st.executeUpdate("insert into orders values("+(id+1)+",'"+a+"','"+b+"','"+type+"',"+qty+",'"+del+"',"+cno+",1,'unpaid',incomplete,0)");
               }
               else
               {
                del=(d1.getYear()+1900)+"-"+(d1.getMonth()+1)+"-"+(d1.getDate()+1);
                st.executeUpdate("insert into orders(oid,odate,otime,otype,ordered_qty,deldate,cno,aid,payment_status,status) values("+(id+1)+",'"+a+"','"+b+"','"+type+"',"+qty+",'"+del+"',"+cno+",1,'unpaid','incomplete')");
               }
  
                float total=(float)qty*rate;              

                hs.setAttribute("oid",(id+1));
                hs.setAttribute("total",total);
                out.print("<br><br><br><font size='6'>Order placed successfully....<br>Total : â‚¹"+total+"0</font><br>");        
           try{
           SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
           Date d2=sdf.parse(del);
           sdf=new SimpleDateFormat("dd MMM yyyy");
            out.print("<br>Your order will be delivered on "+sdf.format(d2));          
         }
        catch(Exception e)
          {
             //ParseException
          }
          st.executeUpdate("update egg1 set qty=qty-"+qty+" where type='"+type+"'");           
          out.print("<br><a href='sms:+917887796882&body=Hi%20I%20would%20like%20to%20place%20a%20order'><font class='form' size='4'><i><u>Click Here To Send a SMS</u></i></font></a><br><br><br>");
          out.print("Confirm your order by doing payment.<br><br><button class='b1'  type='submit'><a href='paymentoption.jsp' style='text-decoration: none; color: #eee6e2;'>Confirm Order</a></button>");              
  }
 
      out.write("            \n");
      out.write("             </font>\n");
      out.write("           </center>\n");
      out.write("     </body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
